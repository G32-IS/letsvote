generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("BE_DATABASE_URL")
}

enum UserRole {
    SysAdmin
    Admin
    Voter
}

model User {
    id              String      @id @default(auto()) @map("_id") @db.ObjectId
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
    email           String      @unique
    hashedPassword  String
    name            String?
    role            UserRole
    events          Event[]
    partecipations  Partecipation[]
}

enum EventType {
    ReferendumNazionale
    ReferendumRegionale
    ElezioneParlamentare
    ElezioneRegionale
    ElezioneProvinciale
    ElezioneComunale
}

model Choice {
    id              String      @id @default(auto()) @map("_id") @db.ObjectId
    title           String
    body            String?
    event           Event       @relation(fields: [eventId], references: [id])
    eventId         String      @db.ObjectId
}

model Event {
    id              String      @id @default(auto()) @map("_id") @db.ObjectId
    title           String
    type            EventType
    body            String?
    author          User        @relation(fields: [authorId], references: [id])
    authorId        String      @db.ObjectId
    startDate       DateTime
    endDate         DateTime
    choices         Choice[]
    votes           Vote[]
    partecipations  Partecipation[]
}

model Partecipation {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    date        DateTime    @default(now())
    user        User        @relation(fields: [userId], references: [id])
    userId      String      @db.ObjectId
    event       Event       @relation(fields: [eventId], references: [id])
    eventId     String      @db.ObjectId
}

model Vote {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    choice      String
    event       Event       @relation(fields: [eventId], references: [id])
    eventId     String      @db.ObjectId
}